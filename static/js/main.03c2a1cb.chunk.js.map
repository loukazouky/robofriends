{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAW,uDAAhB,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,gCACA,6BAAKF,IACL,4BAAIC,WCiBOK,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIpB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GAEdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAFXM,EAAOG,GAAGR,UCCLS,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACA,uBACAA,UAAU,oCACVU,KAAO,SACPC,YAAY,sBACZC,SAAYH,OCCCI,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCJ,EAAMK,aCmBMC,E,kDAlBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE3B,WACC,OAAIG,KAAKJ,MAAMC,SACP,2DAEFG,KAAKX,MAAMK,a,GAfSQ,aCkDbC,E,kDAtCd,aAAe,IAAD,8BACf,gBAaAC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb3C,EAAKZ,MAAQ,CACZjB,OAAQ,GACR2B,YAAa,IAJC,E,qDAQf,WAAqB,IAAD,OACnBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAOzC,WAAU,IAAD,EACwBb,KAAKJ,MAA7BjB,EADA,EACAA,OAAQ2B,EADR,EACQA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAErD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQmC,WAPnB,oBAAIvC,UAAU,KAAd,yB,GAzBgB2B,aCJHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAKlDX,M","file":"static/js/main.03c2a1cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className= 'tc bg-light-green dib br3 pas3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\t// if(true) {\r\n\t// \tthrow new Error('ERROR!');\r\n\t// }\r\nreturn (\r\n\t<div>\r\n\t{\r\n\t\trobots.map((user, i) => { \r\n\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tkey= {robots[i].id}\r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t})\r\n\t}\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input\r\n\t\tclassName='pa3 ba b- -green bg-lightest-blue'\r\n\t\ttype = 'search'\r\n\t\tplaceholder='Search robotfriends'\r\n\t\tonChange = {searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n//Every component of react have children\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px transparent', height: '500px' }}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n//In React 16, solves the problem if tere was an error,\r\n// there was no gracefully error handling method.\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true})\r\n\t}\t\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1> Oooops. That is not good</h1>\r\n\t\t}\r\n\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n//PROPS reads the properties that it receives and render something.\r\n//PROPS can never change\r\n//STATE is an object that describes your application \r\n//STATE are able to change\r\n\r\n//This is part of containers, / smart containers\r\n//they have state in them with lifecycle hooks\r\n//class sytax aswell\r\n//not a pure functions\r\nclass App extends Component {\r\n\tconstructor() {\r\nsuper() //calls the constructor of the component\r\nthis.state = { //STATE can be change thus this becomes important to pass onto child\r\n\trobots: [],\r\n\tsearchField: ''\r\n\t}\r\n}\r\n\r\ncomponentDidMount() {\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response => response.json())\r\n\t.then(users => {this.setState({ robots: users})});\r\n}\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({ searchField: event.target.value })\r\n}\r\n\r\nrender() {\r\n\tconst { robots, searchField } = this.state;\r\n\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t})\r\n\t return !robots.length ? // '?' alternative if statement\r\n\t\t<h1 className='tc'>Loading</h1> : // ':' alternative return statement\r\n\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchChange}/> \r\n\t\t\t<Scroll> \r\n\t\t\t<ErrorBoundary>\r\n\t\t\t<CardList robots={filteredRobots} /> \r\n\t\t\t</ErrorBoundary>\r\n\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}